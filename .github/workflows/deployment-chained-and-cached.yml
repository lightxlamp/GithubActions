name: Deploy React App Chained (Cached dependencies )

on: workflow_dispatch # Before was a "push" value

jobs:
  test_react_app:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./react-gh-actions
    steps:
      - name: Get Access to repo
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci # We can use npm install as well. But this is better and more safe.
        # works if we have package-lock.json in our folder. CI mentioned in recommendations

      - name: Test application
        run: npm run test
  lint_react_app:
    runs-on: ubuntu-latest
    needs: test_react_app
    defaults:
      run:
        working-directory: ./react-gh-actions
    steps:
      - name: Get Access to repo
        uses: actions/checkout@v3
      - name: Re-use or install cached Node Modules
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci # We can use npm install as well. But this is better and more safe.
        # works if we have package-lock.json in our folder. CI mentioned in recommendations
      - name: Lint application
        run: npm run lint
  build_react_app:
    runs-on: ubuntu-latest
    needs: lint_react_app
    defaults:
      run:
        working-directory: ./react-gh-actions
    steps:
      - name: Get Access to repo
        uses: actions/checkout@v3
      - name: Re-use or install cached Node Modules
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci # We can use npm install as well. But this is better and more safe.
        # works if we have package-lock.json in our folder. CI mentioned in recommendations
      - name: Build application
        run: npm run lint
      - name: Deploy
        run: echo Deploying...
